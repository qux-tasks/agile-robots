GENERAL
- All development was done on Ubuntu, so there will likely be some discrepancies in behavior and 
    environment setup on other systems.
- I made the decision to create two separate frameworks because we are testing different platforms. 
    If it were a single platform, I would have simply organized the tests into different suites within
     one framework.
- Both frameworks include reporting functionality. After test execution, if they were run with the 
    required flag, a reports directory will appear in the project root, containing the generated report.
- It is highly recommended to set up the environment using the corresponding README.md files located 
    in the root directories of the projects.

TASK 1
In this task, I have left a number of tests that will fail. This is due to documentation that is not 
entirely accurate and requires clarification, as well as my personal perception. Below, I will describe 
each failing test and the reason for its failure:

* `tests/test_auth.py::test_auth_wrong_content_type`
    The documentation for this functionality states that the content type must be `application/json`. 
    However, when I use `text/plain`, a 200 status code is returned, which seems illogical. In a real 
    project, I would clarify this point.

* `tests/test_auth.py::test_auth_empty_headers`
    This is not explicitly stated in the documentation. However, I added a check for empty headers, 
    expecting some kind of error. Instead, I see a 200 status code. Again, this should be clarified.

* `tests/test_create_booking.py::test_create_booking_with_accept_xml`
    The documentation states that the `Accept` value can be `application/xml`. However, this test 
    fails, which contradicts the documentation. Clarification is needed.

* `tests/test_create_booking.py::test_create_booking_invalid_data[totalprice-abc]`
* `tests/test_create_booking.py::test_create_booking_invalid_data[depositpaid-not_boolean]`
* `tests/test_create_booking.py::test_create_booking_invalid_data[bookingdates-value2]`
    In these test cases, I create a booking with invalid data. However, a 200 status code is returned, 
    which I find illogical. Clarification is required.

* `tests/test_get_booking_ids.py::test_get_booking_ids_invalid_date[01-01-2023]`
    The documentation explicitly states the date format as `CCYY-MM-DD`. However, a 200 status code is 
    returned when using an invalid format. This clearly violates the documentation.

* `tests/test_partial_update_booking.py::test_partial_update_invalid_data[totalprice-abc]`
* `tests/test_partial_update_booking.py::test_partial_update_invalid_data[depositpaid-yes]`
* `tests/test_partial_update_booking.py::test_partial_update_invalid_data[bookingdates-value2]`
* `tests/test_update_booking.py::test_update_booking_invalid_data[totalprice-abc]`
* `tests/test_update_booking.py::test_update_booking_invalid_data[depositpaid-not_bool]`
* `tests/test_update_booking.py::test_update_booking_invalid_data[bookingdates-value2]`
    In these test cases, I attempt to update a booking with invalid data. However, I receive a 200 status 
    code, which I consider illogical.

One way or another, most of the assertions require clarification. However, I set up all the checks with 
the understanding that they need to be clarified.


TASK 2
The testing was performed using the python/playwright/pytest stack.
Currently, two test cases are failing, clearly due to defects. These are common scenarios: leading/trailing 
spaces in the login are not handled, and the login is not case-sensitive.
What I would like to clarify: should the logo contain a link to the home page? Currently, there is no link, 
which is why such a check is not implemented.
I also encountered an issue where during the initial launches (after clearing the cache), the website would 
switch to a different language, even though my system language is set to English. Because of this, approximately 
10 tests might fail, as they verify the correctness of various labels and texts based specifically on the 
English language. In one instance, the language changed to Spanish (or Portuguese), and in another, to Chinese. 
This is also something to keep in mind.
